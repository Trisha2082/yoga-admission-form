{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trisha I\\\\Downloads\\\\nodeproject\\\\frontend\\\\src\\\\YogaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YogaForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [batch, setBatch] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // New state for loading\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate data\n    if (!name || !age || !batch) {\n      alert(\"Please fill in all fields!\");\n      return;\n    }\n    setIsLoading(true); // Set loading state before API call\n\n    // Prepare request data\n    const data = {\n      name,\n      age,\n      batch\n    };\n    try {\n      // Send API call using a separate function\n      const response = await enrollYogaStudent(data);\n      setIsLoading(false); // Clear loading state after response\n\n      if (response.success) {\n        alert(\"Successfully enrolled! Please proceed to payment.\");\n      } else {\n        alert(\"Error enrolling: \" + response.message);\n      }\n    } catch (error) {\n      setIsLoading(false); // Clear loading state on error\n      console.error(error);\n      alert(\"An unexpected error occurred!\");\n    }\n  };\n  const enrollYogaStudent = async data => {\n    // Separate function for API call\n    const response = await fetch(\"https://yoga-application-alpha.vercel.c/api/enroll\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return await response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        disabled: isLoading // Disable input while loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Batch:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: batch,\n        onChange: e => setBatch(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Batch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6-7AM\",\n          children: \"6-7 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7-8AM\",\n          children: \"7-8 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"8-9AM\",\n          children: \"8-9 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5-6PM\",\n          children: \"5-6 PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? \"Loading...\" : \"Enroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(YogaForm, \"8/0TTFINbd2IMtg4OkqzSukvDA0=\");\n_c = YogaForm;\nexport default YogaForm;\nvar _c;\n$RefreshReg$(_c, \"YogaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YogaForm","_s","name","setName","age","setAge","batch","setBatch","isLoading","setIsLoading","handleSubmit","e","preventDefault","alert","data","response","enrollYogaStudent","success","message","error","console","fetch","method","body","JSON","stringify","headers","json","onSubmit","children","type","value","onChange","target","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Trisha I/Downloads/nodeproject/frontend/src/YogaForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction YogaForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [batch, setBatch] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false); // New state for loading\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate data\r\n    if (!name || !age || !batch) {\r\n      alert(\"Please fill in all fields!\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Set loading state before API call\r\n\r\n    // Prepare request data\r\n    const data = {\r\n      name,\r\n      age,\r\n      batch,\r\n    };\r\n\r\n    try {\r\n      // Send API call using a separate function\r\n      const response = await enrollYogaStudent(data);\r\n\r\n      setIsLoading(false); // Clear loading state after response\r\n\r\n      if (response.success) {\r\n        alert(\"Successfully enrolled! Please proceed to payment.\");\r\n      } else {\r\n        alert(\"Error enrolling: \" + response.message);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false); // Clear loading state on error\r\n      console.error(error);\r\n      alert(\"An unexpected error occurred!\");\r\n    }\r\n  };\r\n\r\n  const enrollYogaStudent = async (data) => {\r\n    // Separate function for API call\r\n    const response = await fetch(\"https://yoga-application-alpha.vercel.c/api/enroll\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return await response.json();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          disabled={isLoading} // Disable input while loading\r\n        />\r\n      </label>\r\n      <label>\r\n        Age:\r\n        <input\r\n          type=\"number\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n          disabled={isLoading}\r\n        />\r\n      </label>\r\n      <label>\r\n        Batch:\r\n        <select value={batch} onChange={(e) => setBatch(e.target.value)}>\r\n          <option value=\"\">Select Batch</option>\r\n          <option value=\"6-7AM\">6-7 AM</option>\r\n          <option value=\"7-8AM\">7-8 AM</option>\r\n          <option value=\"8-9AM\">8-9 AM</option>\r\n          <option value=\"5-6PM\">5-6 PM</option>\r\n        </select>\r\n      </label>\r\n      <button type=\"submit\" disabled={isLoading}>\r\n        {isLoading ? \"Loading...\" : \"Enroll\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default YogaForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}